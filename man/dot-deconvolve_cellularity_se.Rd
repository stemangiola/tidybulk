% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods_SE.R
\name{.deconvolve_cellularity_se}
\alias{.deconvolve_cellularity_se}
\title{Deconvolve bulk data to sample-level cellâ€“type proportions}
\usage{
.deconvolve_cellularity_se(
  .data,
  reference = X_cibersort,
  method = "cibersort",
  prefix = "",
  ...
)
}
\arguments{
\item{.data}{A `SummarizedExperiment`.}

\item{reference}{Reference matrix or method-specific handle (see Details).}

\item{method}{Character string naming the deconvolution method.}

\item{prefix}{Optional prefix to prepend to output column names.}

\item{...}{Additional arguments passed through to the underlying
deconvolution function.}
}
\value{
The input `SummarizedExperiment` with additional proportion columns
        in `colData`.
}
\description{
Wrapper that applies a chosen deconvolution engine (CIBERSORT, LLSR, EPIC,
MCPcounter, quanTIseq, or xCell via immunedeconv) to the active assay in a
`SummarizedExperiment`, then appends the estimated proportions to `colData`.
You may supply a custom reference matrix; otherwise sensible defaults are
used per method.
}
\details{
* `"cibersort"` uses `my_CIBERSORT()` and requires the packages *class*,
  *e1071*, and *preprocessCore*.
* `"llsr"` uses `run_llsr()`.
* `"epic"` uses `run_epic()`.
* `"mcp_counter"`, `"quantiseq"`, and `"xcell"` use `immunedeconv::deconvolute()`
  and require that *immunedeconv* is attached.
}
\concept{deconvolution helpers}
\keyword{internal}
